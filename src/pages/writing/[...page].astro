---
import type { GetStaticPathsOptions } from 'astro';

import Pagination from '@/components/Pagination.astro';
import PostPreview from '@/components/PostPreview.astro';
import { filterDrafts, sortPosts } from '@/data/posts';
import { groupTagsByCount } from '@/data/tags';
import PageLayout from '@/layouts/Page.astro';
import type { Post } from '@/types/post';

export const posts = filterDrafts(sortPosts(await Astro.glob('./posts/*.mdx')));
const tags = groupTagsByCount(posts);

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  return paginate(posts, { pageSize: 10 });
}

const { page } = Astro.props;

let title = 'Solomon Hawk - Writing';
let description = 'Selected writing from the depths of the mind of Solomon.';
let permalink = new URL(Astro.url.pathname, Astro.site);
---

<PageLayout content={{ title, description, permalink }}>
  <section slot="main">
    <h2 class="h1 mb-heading-lg md:mb-heading-xl">
      <span class="sr-only">Writing Page {page.currentPage}</span>
      <span aria-hidden="true">
        <span class="text-green-500">.</span><span class="text-gray-500"
          >0x</span
        >WR171N6{page.currentPage > 1 ? `/${page.currentPage}` : ''}
      </span>
    </h2>

    <div class="space-y-8 md:space-y-12">
      {page.data.map((p: Post) => <PostPreview post={p} />)}
    </div>

    <Pagination url={page.url} />
  </section>

  {
    tags.length > 0 && (
      <section class="mt-8 md:ml-4 md:text-right" slot="sidebar">
        <h2 class="h3 mb-heading-lg md:mb-heading-xl">Tags</h2>

        <ul class="blog-tags flex-col font-mono text-sm">
          {tags.map((t) => {
            const tagLabel = `${t.tag}${
              t.count > 1 ? `${String.fromCharCode(160)}(${t.count})` : ''
            }`;

            return (
              <li>
                {/* prettier-ignore */}
                <a class="blog-tag whitespace-nowrap" rel="prefetch" href={`/writing/tags/${t.tag}`}>{tagLabel}</a>
              </li>
            );
          })}
        </ul>
      </section>
    )
  }
</PageLayout>
