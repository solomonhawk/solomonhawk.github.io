---
import type { GetStaticPathsOptions } from "astro";
import type { Post } from "../../types/post";

import PageLayout from "../../layouts/Page.astro";
import BlogPostPreview from "../../components/BlogPostPreview.astro";
import { sortPosts } from "../../data/posts";
import BlogPagination from "../../components/BlogPagination.astro";
import { groupTagsByCount } from "@data/tags";

let title = "Solomon Hawk";
let description = "Selected writing from the depths of the mind of Solomon.";
let permalink = new URL(Astro.url.pathname, Astro.site);

export const posts = sortPosts(await Astro.glob("./posts/*.mdx"));
const tags = groupTagsByCount(posts)

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
	return paginate(posts, { pageSize: 10 });
}

const { page } = Astro.props;
---

<PageLayout content={{ title, description, permalink }}>
	<section class="mt-8" slot="main">
		<h2 class="h1 mb-heading-lg md:mb-heading-xl">
			<span class="text-green-500">.</span><span class="text-gray-500">0x</span
			>WR171N6{page.currentPage > 1 ? `/${page.currentPage}` : ""}
		</h2>

		<div class="space-y-8 md:space-y-12">
			{page.data.map((p: Post) => <BlogPostPreview post={p} />)}
		</div>

		<BlogPagination url={page.url} />
	</section>

	{tags.length > 0 && (
		<section class="mt-8 md:ml-4 md:text-right" slot="sidebar">
			<h2 class="h3 mb-heading-lg md:mb-heading-xl">Tags</h2>

			<ul class="blog-tags flex-col text-sm font-mono">
				{
					tags.map((t) => (
						<li>
							<a class="blog-tag" href={`/writing/tags/${t.tag}`}>{t.tag}{t.count > 1 ? `${String.fromCharCode(160)}(${t.count})` : ''}</a> <!-- prettier-ignore -->
						</li>
					))
				}
			</ul>
		</section>
	)}
</PageLayout>
